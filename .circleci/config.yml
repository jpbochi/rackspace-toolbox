version: 2
jobs:
  build_toolboxes:
    environment:
      SUPPORTED_TF_VERSIONS: "0.11.8 0.11.7"
    working_directory: /rackspace-toolbox
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip parallel
      - deploy:
          name: Build rackspace-toolbox containers
          command: |
            echo $SUPPORTED_TF_VERSIONS | tr ' ' '\n' | parallel --will-cite scripts/build_container.sh {}

  test_toolbox_0_11_7:
    docker:
      - image: rackautomation/rackspace-toolbox:0.11.7-$CIRCLE_SHA1
    steps:
      - checkout
      - run:
          name: check old
          command: cd test && check_old.sh
      - run:
          name: lint tests
          command: cd test && lint.sh
      - run:
          name: plan
          command: cd test && plan.sh
      - run:
          name: apply
          command: cd test && apply.sh || echo "apply failed."
      - run:
          name: destroy
          command: cd test && destroy.sh

  test_toolbox_0_11_8:
    docker:
      - image: rackautomation/rackspace-toolbox:0.11.8-$CIRCLE_SHA1
    steps:
      - checkout
      - run:
          name: check old
          command: cd test && check_old.sh
      - run:
          name: lint tests
          command: cd test && lint.sh
      - run:
          name: plan
          command: cd test && plan.sh
      - run:
          name: apply
          command: cd test && apply.sh || echo "apply failed."
      - run:
          name: destroy
          command: cd test && destroy.sh

  test:
    docker:
      - image: hashicorp/terraform:0.11.8
    steps:
      - checkout
      - run: mv repository_template/bin test/bin
      - run:
          name: lint tests
          command: cd test && ./bin/lint.sh
      - run:
          name: plan
          command: cd test && ./bin/plan.sh
      - run:
          name: apply
          command: cd test && ./bin/apply.sh || echo "apply failed."
      - run:
          name: destroy
          command: cd test && ./bin/destroy.sh  # must succeed or we have something to clean up manually

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_toolboxes
      - test_toolbox_0_11_8:
         requires:
           - build_toolboxes
      - test_toolbox_0_11_7:
         requires:
           - build_toolboxes
      - test:
          filters:
            branches:
             ignore: master
